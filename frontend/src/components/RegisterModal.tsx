import React, { FormEvent, useState } from 'react'
import Modal from './Modal'
import API, { setAuthToken } from "@/api/axios";

interface RegisterModalProps {
  isOpen: boolean
  onClose: () => void
}

const RegisterModal: React.FC<RegisterModalProps> = ({ isOpen, onClose }) => {
  const [email, setEmail] = useState('')
  const [password, setPassword] = useState('')
  const [rePassword, setRePassword] = useState('')
  const [showPasswords, setShowPasswords] = useState(false)
  const [emailSent, setEmailSent] = useState(false)
  const [error, setError] = useState<string | null>(null)

  const handleSubmit = async (e: FormEvent) => {
    e.preventDefault()
    setError(null)

    try {
      await API.post('/register', {
        name: email.split('@')[0], // Laravel —Ç—Ä–µ–±—É–µ—Ç name, –º–æ–∂–Ω–æ –≤—Ä–µ–º–µ–Ω–Ω–æ –≤–∑—è—Ç—å –∏–∑ email
        email,
        password,
        password_confirmation: rePassword,
      })
      setEmailSent(true)
    } catch (err: any) {
      setError('–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–ª—è.')
      console.error(err.response?.data || err.message)
    }
  }


  return (
    <Modal isOpen={isOpen} onClose={onClose}>
      <h2 className="text-2xl font-bold mb-6 text-center">üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</h2>

      <form className="space-y-4" onSubmit={handleSubmit}>
        <input
          type="email"
          placeholder="Email"
          value={email}
          onChange={(e) => setEmail(e.target.value)}
          className="w-full border p-2 rounded"
          required
        />

        <input
          type={showPasswords ? 'text' : 'password'}
          placeholder="–ü–∞—Ä–æ–ª—å"
          value={password}
          onChange={(e) => setPassword(e.target.value)}
          className="w-full border p-2 rounded"
          required
        />

        <input
          type={showPasswords ? 'text' : 'password'}
          placeholder="–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è"
          value={rePassword}
          onChange={(e) => setRePassword(e.target.value)}
          className="w-full border p-2 rounded"
          required
        />

        <label className="text-sm flex items-center space-x-2 mt-1">
          <input
            type="checkbox"
            checked={showPasswords}
            onChange={() => setShowPasswords(!showPasswords)}
          />
          <span>–ü–æ–∫–∞–∑–∞—Ç—å –ø–∞—Ä–æ–ª–∏</span>
        </label>

        <div className="bg-gray-100 border rounded p-3 text-center text-sm text-gray-600">
          üõ° –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ email –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –ø–æ—á—Ç—É
        </div>

        {error && <p className="text-red-600 text-sm">{error}</p>}

        <button type="submit" className="w-full bg-green-600 text-white py-2 rounded hover:bg-green-700">
          –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
        </button>

        {emailSent && (
          <div className="mt-6 text-sm text-green-700 bg-green-50 p-3 rounded text-center">
            üì© –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—á—Ç—É –∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞.
          </div>
        )}
      </form>
    </Modal>
  )
}

export default RegisterModal
