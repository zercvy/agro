// import React from 'react'

// interface Pot {
//   culture: string
//   volume: number
//   status: string
// }

// const PotTable: React.FC = () => {
//   const pots: Pot[] = [
//     { culture: '–¢–æ–º–∞—Ç', volume: 5, status: '–¥–æ—Å–≤–µ—Ç–∫–∞' },
//     { culture: '–£–∫—Ä–æ–ø', volume: 2, status: '—Ä–∞—Å—Ç—ë—Ç' },
//   ]

//   return (
//     <div className="bg-white p-6 mt-6 rounded shadow">
//       <h3 className="text-lg font-semibold mb-4">üßæ –ì–æ—Ä—à–∫–∏ –Ω–∞ –ø–æ–¥–æ–∫–æ–Ω–Ω–∏–∫–µ</h3>
//       <table className="w-full text-sm">
//         <thead>
//           <tr className="bg-gray-100">
//             <th className="p-2 text-left">–ö—É–ª—å—Ç—É—Ä–∞</th>
//             <th className="p-2 text-left">–û–±—ä—ë–º (–ª)</th>
//             <th className="p-2 text-left">–°—Ç–∞—Ç—É—Å</th>
//           </tr>
//         </thead>
//         <tbody>
//           {pots.map((pot, i) => (
//             <tr key={i} className="border-t">
//               <td className="p-2">{pot.culture}</td>
//               <td className="p-2">{pot.volume}</td>
//               <td className="p-2">{pot.status}</td>
//             </tr>
//           ))}
//         </tbody>
//       </table>
//     </div>
//   )
// }

// export default PotTable

import React, { useEffect, useState } from 'react'
import axios from '../api/axios'

interface Pot {
  id: number
  culture: string
  volume: number
  // –í –±—É–¥—É—â–µ–º: status (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å–≤–µ—Ç–∞")
}

interface Props {
  windowsillId: number
}

const PotTable: React.FC<Props> = ({ windowsillId }) => {
  const [pots, setPots] = useState<Pot[]>([])

  useEffect(() => {
    const fetchPots = async () => {
      try {
        const res = await axios.get(`/pots?windowsillId=${windowsillId}`, {
          withCredentials: true,
        })
        setPots(res.data)
      } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≥–æ—Ä—à–∫–æ–≤:', err)
      }
    }

    if (windowsillId) fetchPots()
  }, [windowsillId])

  if (!windowsillId) return null

  return (
    <div className="bg-white p-6 mt-6 rounded shadow">
      <h3 className="text-lg font-semibold mb-4">üßæ –ì–æ—Ä—à–∫–∏ –Ω–∞ –ø–æ–¥–æ–∫–æ–Ω–Ω–∏–∫–µ</h3>
      {pots.length === 0 ? (
        <p className="text-sm text-gray-500">–ù–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –≥–æ—Ä—à–∫–æ–≤</p>
      ) : (
        <table className="w-full text-sm">
          <thead>
            <tr className="bg-gray-100">
              <th className="p-2 text-left">–ö—É–ª—å—Ç—É—Ä–∞</th>
              <th className="p-2 text-left">–û–±—ä—ë–º (–ª)</th>
            </tr>
          </thead>
          <tbody>
            {pots.map((pot) => (
              <tr key={pot.id} className="border-t">
                <td className="p-2">{pot.culture}</td>
                <td className="p-2">{pot.volume}</td>
              </tr>
            ))}
          </tbody>
        </table>
      )}
    </div>
  )
}

export default PotTable
